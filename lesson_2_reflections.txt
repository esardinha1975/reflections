What happens when you initialize a repository? Why do you need to do it?

Git creates a hidden folder called ".git" which contains all metadata 
necessary to manage the repository and files you are going to commit.


How is the staging area different from the working directory and the repository? 
What value do you think it offers?

It is an intermediate area where your changes live before you commit them.
It is an interesting feature of Git as you can check all your changes (and 
change again or revert them) before committing.


How can you use the staging area to make sure you have one commit per logical change?

You can use git diff/status to check your changes and modified files.


What are some situations when branches would be helpful in keeping your history organized?
How would branches help?

- Fixing bugs;
- Refactoring code;
- Testing new features;
- Modifying and exploring code;
- Etc.


How do the diagrams help you visualize the branch structure?

Diagrams let me see how many branches there exist, from which commit 
they were split and how they are synchronized to each other.


What is the result of merging two branches together? Why do we represent it in the diagram 
the way we do?

Result is a commit containing all (or some) changes from other branch which 
aren't on current branch.
